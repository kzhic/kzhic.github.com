<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CentOS7.6上安装jenkins</title>
    <url>/2019/09/20/CentOS7.6%E4%B8%8A%E5%AE%89%E8%A3%85jenkins/</url>
    <content><![CDATA[<p>自己使用的是root用户安装</p>
<p>1.增加jenkins仓库</p>
<figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo</span><br><span class="line">rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key （第一次增加数字签名）</span><br></pre></td></tr></table></figure>
<p>2.安装jdk（自己已经安装）</p>
<p>3.安装jenkins</p>
<figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">yum install jenkins</span><br></pre></td></tr></table></figure>
<p>4.由于网络问题，上面的安装非常非常慢，所以我把jenkins的rpm文件下载到本地mac上，然后再安装</p>
<p>5.拷贝jenkins的rpm文件到云服务器上：</p>
<figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">scp -v -P 2203 ~/Downloads/jenkins-2.204.5-1.1.noarch.rpm root@118.24.48.93:/root/document</span><br></pre></td></tr></table></figure>

<p>6.root登录到云服务器，检查一下所有依赖能否安装：</p>
<figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">rpm -ivh ./document/jenkins-2.204.5-1.1.noarch.rpm --<span class="built_in">test</span></span><br></pre></td></tr></table></figure>
<p>7.安装</p>
<figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">rpm -ivh ./document/jenkins-2.204.5-1.1.noarch.rpm</span><br><span class="line">``` </span><br><span class="line">以上默认安装过后，有以下一些跟jenkins相关的文件目录：</span><br><span class="line">/usr/lib/jenkins/jenkins.war jenkins WAR包</span><br><span class="line">/etc/sysconfig/jenkins 配置文件</span><br><span class="line">/var/lib/jenkins/ 默认的JENKINS_HOME目录</span><br><span class="line">/var/<span class="built_in">log</span>/jenkins/jenkins.log jenkins日志文件</span><br><span class="line">/var/cache/jenkins 缓存文件</span><br><span class="line"></span><br><span class="line">8.备份一下/etc/sysconfig/jenkins配置文件，备份到/etc/sysconfig目录下：</span><br><span class="line">```zsh</span><br><span class="line">cp ./jenkins ./jenkins.bak</span><br></pre></td></tr></table></figure>
<p>9.为了不因为权限出现各种问题，这里修改为root</p>
<figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">vim /etc/sysconfig/jenkins</span><br></pre></td></tr></table></figure>
<p>修改配置：<br>JENKINS_USER=”root”<br>修改端口：<br>JENKINS_PORT=”9090”<br>然后esc，按:wq，按enter退出</p>
<p>查看相关受影响的目录权限：</p>
<figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">ll -d  /var/lib/jenkins /var/cache/jenkins /var/<span class="built_in">log</span>/jenkins</span><br><span class="line">``` </span><br><span class="line">修改相关目录权限：</span><br><span class="line">```zsh</span><br><span class="line">chown -R root:root /var/lib/jenkins</span><br><span class="line">chown -R root:root /var/cache/jenkins</span><br><span class="line">chown -R root:root /var/<span class="built_in">log</span>/jenkins</span><br></pre></td></tr></table></figure>
<p>再次查看相关受影响的目录权限，查看是否修改成功：</p>
<figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">ll -d  /var/lib/jenkins /var/cache/jenkins /var/<span class="built_in">log</span>/jenkins</span><br></pre></td></tr></table></figure>
<p>10.启动jenkins</p>
<figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">systemctl start jenkins.service</span><br></pre></td></tr></table></figure>
<p>检查是否启动成功：</p>
<figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">systemctl status jenkins.servie</span><br></pre></td></tr></table></figure>
<p>设定系统一启动就运行jenkins：</p>
<figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> jenkins.service</span><br></pre></td></tr></table></figure>
<p>启动jenkins，报如下错误：<br><img src="evernotecid://027F99A5-7035-4B42-8B37-7A81BBD418E5/appyinxiangcom/5051766/ENResource/p9703" alt="d6f8524c90949f382fe8b782b44e2834.png"><br>看了上面的报错，也不是很明白错误原因，执行systemctl status jenkins.service查看具体的报错原因：<br><img src="evernotecid://027F99A5-7035-4B42-8B37-7A81BBD418E5/appyinxiangcom/5051766/ENResource/p9704" alt="c1bc12a7284b0c82aac1504b0e35792b.png"><br>根据截图，可以看出问题是在执行/etc/rc.d/init.d/jenkins时，在/usr/bin/java中找不到java，因为我是自定义安装的Java，解决办法就是修改文件或者建立一个软链接指向/usr/bin/java，查看我的Java信息，如下图<br><img src="evernotecid://027F99A5-7035-4B42-8B37-7A81BBD418E5/appyinxiangcom/5051766/ENResource/p9705" alt="5b3e220f931abb3cf61cde4a79f2b6bf.png"><br>方式一（我不喜欢用这种方式，万一删除了自己安装的jdk以及环境变量可能报错）建立软链接：</p>
<figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">ln -s /usr/<span class="built_in">local</span>/java/jdk-11.0.6/bin/java /usr/bin/java</span><br></pre></td></tr></table></figure>
<p>方式二：修改/etc/init.d/jenkins文件，首先备份一下：</p>
<figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">cp ./jenkins ./jenkins.bak</span><br></pre></td></tr></table></figure>
<p>vim /etc/init.d/jenkins在下面的图中添加一行：<br><img src="evernotecid://027F99A5-7035-4B42-8B37-7A81BBD418E5/appyinxiangcom/5051766/ENResource/p9706" alt="b03660fc290b1f2ac679dc8f48ac382a.png"><br>添加 /usr/local/java/jdk-11.0.6/bin/java<br>保存，然后重启jenkins<br><img src="evernotecid://027F99A5-7035-4B42-8B37-7A81BBD418E5/appyinxiangcom/5051766/ENResource/p9707" alt="b1ac18b5febe8b0b1e94f6200946e128.png"><br>报如上错误，然后执行systemctl daemon-reload</p>
<p>11.又重启jenkins</p>
<figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">systemctl start jenkins.service</span><br></pre></td></tr></table></figure>
<p>查看jenkins运行状态：<br><img src="evernotecid://027F99A5-7035-4B42-8B37-7A81BBD418E5/appyinxiangcom/5051766/ENResource/p9708" alt="dc1dabfdf772a211f05d2c5182579598.png"></p>
<p>设定系统一启动就运行jenkins：<br>systemctl enable jenkins.service<br><img src="evernotecid://027F99A5-7035-4B42-8B37-7A81BBD418E5/appyinxiangcom/5051766/ENResource/p9709" alt="5f2052994c8df2d7b7634a3e073aa9ee.png"><br>去浏览器登录一下查看一下，是否正常启动</p>
<p>12.报错如下：<br>AWT is not properly configured on this server. Perhaps you need to run your container with “-Djava.awt.headless=true”? See also: <a href="https://jenkins.io/redirect/troubleshooting/java.awt.headless" target="_blank" rel="noopener">https://jenkins.io/redirect/troubleshooting/java.awt.headless</a></p>
<p>java.lang.NullPointerException<br>    at java.desktop/sun.awt.FontConfiguration.getVersion(FontConfiguration.java:1262)<br>    at java.desktop/sun.awt.FontConfiguration.readFontConfigFile(FontConfiguration.java:225)<br>    at java.desktop/sun.awt.FontConfiguration.init(FontConfiguration.java:107)<br>    at java.desktop/sun.awt.X11FontManager.createFontConfiguration(X11FontManager.java:719)<br>    at java.desktop/sun.font.SunFontManager$2.run(SunFontManager.java:367)<br>    at java.base/java.security.AccessController.doPrivileged(Native Method)<br>    at java.desktop/sun.font.SunFontManager.<init>(SunFontManager.java:312)<br>    at java.desktop/sun.awt.FcFontManager.<init>(FcFontManager.java:35)<br>    at java.desktop/sun.awt.X11FontManager.<init>(X11FontManager.java:56)<br>Caused: java.lang.reflect.InvocationTargetException<br>    at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)<br>    at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)<br>    at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)<br>    at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)<br>    at java.desktop/sun.font.FontManagerFactory$1.run(FontManagerFactory.java:84)<br>Caused: java.lang.InternalError<br>    at java.desktop/sun.font.FontManagerFactory$1.run(FontManagerFactory.java:86)<br>    at java.base/java.security.AccessController.doPrivileged(Native Method)<br>    at java.desktop/sun.font.FontManagerFactory.getInstance(FontManagerFactory.java:74)<br>    at java.desktop/java.awt.Font.getFont2D(Font.java:497)<br>    at java.desktop/java.awt.Font.getFamily(Font.java:1410)<br>    at java.desktop/java.awt.Font.getFamily_NoClientCode(Font.java:1384)<br>    at java.desktop/java.awt.Font.getFamily(Font.java:1376)<br>    at java.desktop/java.awt.Font.toString(Font.java:1869)<br>    at hudson.util.ChartUtil.<clinit>(ChartUtil.java:260)<br>    at hudson.WebAppMain.contextInitialized(WebAppMain.java:192)<br>    at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:957)<br>    at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:553)<br>    at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:922)<br>    at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:365)<br>    at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1497)<br>    at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1459)<br>    at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:852)<br>    at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:278)<br>    at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:545)<br>    at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)<br>    at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:167)<br>    at org.eclipse.jetty.server.Server.start(Server.java:418)<br>    at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:110)<br>    at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113)<br>    at org.eclipse.jetty.server.Server.doStart(Server.java:382)<br>    at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)<br>    at winstone.Launcher.<init>(Launcher.java:187)<br>    at winstone.Launcher.main(Launcher.java:362)<br>    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)<br>    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)<br>    at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)<br>    at java.base/java.lang.reflect.Method.invoke(Method.java:566)<br>    at Main._main(Main.java:375)<br>    at Main.main(Main.java:151)</p>
<p> 从上面的说明可以看出应该安装的jdk缺少AWT，需要安装fontconfig：<br> <figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">yum install fontconfig</span><br></pre></td></tr></table></figure><br> 重启jenkins:<br> <figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">systemctl restart jenkins.service</span><br></pre></td></tr></table></figure><br> 看到如下的图片就成功了：<br> <img src="evernotecid://027F99A5-7035-4B42-8B37-7A81BBD418E5/appyinxiangcom/5051766/ENResource/p9710" alt="790febf3201e5e64cd85d92ce87b6170.png"></p>
<p> 13.复制密码<br> <figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">cat /var/lib/jenkins/secrets/initialAdminPassword</span><br></pre></td></tr></table></figure><br> 14.解决jenkins下载插件慢问题：</p>
<p> 在/var/lib/jenkins目录找到文件hudson.model.UpdateCenter.xml，备份文件<br> <figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">cp ./hudson.model.UpdateCenter.xml ./hudson.model.UpdateCenter.bak.xml</span><br><span class="line">vim hudson.model.UpdateCenter.xml</span><br></pre></td></tr></table></figure><br> 修改<a href="https://updates.jenkins.io/update-center.json为https://mirror.xmission.com/jenkins/updates/update-center.json修改之后:wq保存退出" target="_blank" rel="noopener">https://updates.jenkins.io/update-center.json为https://mirror.xmission.com/jenkins/updates/update-center.json修改之后:wq保存退出</a></p>
<p>然后cd到updates目录，使用vim打开default.json文件，执行如下替换：<br>替换下载URL：</p>
<figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">1,<span class="variable">$s</span>/http:\/\/updates.jenkins-ci.org\/download/https:\/\/mirrors.tuna.tsinghua.edu.cn\/jenkins/g</span><br></pre></td></tr></table></figure>
<p>替换连接测试URL：</p>
<figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">1,<span class="variable">$s</span>/http:\/\/www.google.com/https:\/\/www.baidu.com/g</span><br></pre></td></tr></table></figure>
<p>进入vi先输入:然后再粘贴上边的:后边的命令，注意不要写两个冒号！<br>修改完成保存退出:wq</p>
<p>重启Jenkins</p>
<p>15.输入密码，然后点击继续，进入如下页面：<br><img src="evernotecid://027F99A5-7035-4B42-8B37-7A81BBD418E5/appyinxiangcom/5051766/ENResource/p9711" alt="7354522a82ae3b7ac56d240a9c697d7d.png"><br>选择“安装Jenkins社区推荐的插件”进入插件安装<br><img src="evernotecid://027F99A5-7035-4B42-8B37-7A81BBD418E5/appyinxiangcom/5051766/ENResource/p9712" alt="b9d48e1021cffb9cc73df2bd5d90f134.png"></p>
<p>16创建用户，为了测试创建用户名为root<br><img src="evernotecid://027F99A5-7035-4B42-8B37-7A81BBD418E5/appyinxiangcom/5051766/ENResource/p9713" alt="6a5e4e7855c869999f55f5965db2e9c4.png"><br>参考链接：<br><a href="http://pkg.jenkins.io/redhat-stable/" target="_blank" rel="noopener">RedHat安装jenkins包</a><br><a href="https://stackoverflow.com/questions/20031475/starting-jenkins-bash-usr-bin-java-no-such-file-or-directory" target="_blank" rel="noopener">starting-jenkins-bash-usr-bin-java-no-such-file-or-directory</a><br><a href="https://cloud.tencent.com/developer/article/1563303" target="_blank" rel="noopener">Jenkins插件下载速度慢、安装失败</a><br><a href="https://linuxize.com/post/how-to-install-jenkins-on-centos-7/" target="_blank" rel="noopener">How to Install Jenkins on CentOS 7</a><br><a href="https://www.linuxtechi.com/install-configure-jenkins-on-centos-7-rhel-7/" target="_blank" rel="noopener">How to install and Configure Jenkins on CentOS 7 and RHEL 7</a></p>
]]></content>
      <tags>
        <tag>docker</tag>
        <tag>jenkins</tag>
      </tags>
  </entry>
  <entry>
    <title>浅拷贝 深拷贝</title>
    <url>/2020/04/22/%E6%B5%85%E6%8B%B7%E8%B4%9D%20%E6%B7%B1%E6%8B%B7%E8%B4%9D/</url>
    <content><![CDATA[<h4 id="浅拷贝（Shallow-copy"><a href="#浅拷贝（Shallow-copy" class="headerlink" title="浅拷贝（Shallow copy)"></a>浅拷贝（Shallow copy)</h4><p>当执行浅拷贝时，被拷贝的对象的所有属性都被拷贝了，但是对象属性只是拷贝了其引用，也就是说，被拷贝了的对象中对象属性发生了改变，相应原来的对象对应的对象属性也会改变，因为其引用都指向同一个地址，clone()方法默认执行浅拷贝，示例代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShallowCopyDemo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> <span class="keyword">implements</span> <span class="title">Cloneable</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> String name;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">        <span class="keyword">private</span> ContactInfo contactInfo;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String name, <span class="keyword">int</span> age, ContactInfo contactInfo)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.name = name;</span><br><span class="line">            <span class="keyword">this</span>.age = age;</span><br><span class="line">            <span class="keyword">this</span>.contactInfo = contactInfo;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.name = name;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.age = age;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"name="</span> + name + <span class="string">", age= "</span> + age + <span class="string">", telephone="</span></span><br><span class="line">                + contactInfo.getTelephone()</span><br><span class="line">                + <span class="string">", mail="</span> + contactInfo.getMail();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Object <span class="title">clone</span><span class="params">()</span> <span class="keyword">throws</span> CloneNotSupportedException </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">super</span>.clone();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> CloneNotSupportedException </span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">"请输入名字："</span>);</span><br><span class="line">        String name = sc.next();</span><br><span class="line">        System.out.println(<span class="string">"请输入年龄："</span>);</span><br><span class="line">        <span class="keyword">int</span> age = sc.nextInt();</span><br><span class="line">        System.out.println(<span class="string">"*********** contanctinfo start *********"</span>);</span><br><span class="line">        System.out.println(<span class="string">"请输入电话号码："</span>);</span><br><span class="line">        String telephone = sc.next();</span><br><span class="line">        System.out.println(<span class="string">"请输入邮箱："</span>);</span><br><span class="line">        String mail = sc.next();</span><br><span class="line">        ContactInfo contactInfo = <span class="keyword">new</span> ContactInfo(telephone, mail);</span><br><span class="line">        System.out.println(<span class="string">"*********** contanctinfo end *********"</span>);</span><br><span class="line">        Person person = <span class="keyword">new</span> Person(name, age, contactInfo);</span><br><span class="line">        System.out.println(<span class="string">"最初的Person信息："</span>);</span><br><span class="line">        System.out.println(person.toString());</span><br><span class="line">        Person copiedPerson = (Person) person.clone();</span><br><span class="line">        System.out.println(<span class="string">"拷贝的Person信息："</span>);</span><br><span class="line">        System.out.println(copiedPerson.toString());</span><br><span class="line">        System.out.println(<span class="string">"************修改拷贝的Person start ***********"</span>);</span><br><span class="line">        copiedPerson.setName(<span class="string">"lisi"</span>);</span><br><span class="line">        copiedPerson.setAge(<span class="number">36</span>);</span><br><span class="line">        copiedPerson.contactInfo.setMail(<span class="string">"lisi@163.com"</span>);</span><br><span class="line">        System.out.println(<span class="string">"************修改拷贝的Person end ***********"</span>);</span><br><span class="line">        System.out.println(<span class="string">"最初的Person信息："</span>);</span><br><span class="line">        System.out.println(person.toString());</span><br><span class="line">        System.out.println(<span class="string">"拷贝的Person信息："</span>);</span><br><span class="line">        System.out.println(copiedPerson.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ContactInfo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String telephone;</span><br><span class="line">    <span class="keyword">private</span> String mail;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ContactInfo</span><span class="params">(String telephone, String mail)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.telephone = telephone;</span><br><span class="line">        <span class="keyword">this</span>.mail = mail;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getTelephone</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> telephone;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTelephone</span><span class="params">(String telephone)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.telephone = telephone;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mail;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMail</span><span class="params">(String mail)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.mail = mail;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行结果如下：</p>
<figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">请输入名字：</span><br><span class="line">zhangsan</span><br><span class="line">请输入年龄：</span><br><span class="line">30</span><br><span class="line">*********** contanctinfo start *********</span><br><span class="line">请输入电话号码：</span><br><span class="line">1234</span><br><span class="line">请输入邮箱：</span><br><span class="line">zhangsan@163.com</span><br><span class="line">*********** contanctinfo end *********</span><br><span class="line">最初的Person信息：</span><br><span class="line">name=zhangsan, age= 30, telephone=1234, mail=zhangsan@163.com</span><br><span class="line">拷贝的Person信息：</span><br><span class="line">name=zhangsan, age= 30, telephone=1234, mail=zhangsan@163.com</span><br><span class="line">************修改拷贝的Person start ***********</span><br><span class="line">************修改拷贝的Person end ***********</span><br><span class="line">最初的Person信息：</span><br><span class="line">name=zhangsan, age= 30, telephone=1234, mail=lisi@163.com</span><br><span class="line">拷贝的Person信息：</span><br><span class="line">name=lisi, age= 36, telephone=1234, mail=lisi@163.com</span><br></pre></td></tr></table></figure>
<p>浅拷贝如下图所示：<br><img src="/images/shallow-copy.png" alt=""></p>
]]></content>
      <tags>
        <tag>java</tag>
        <tag>shallow copy</tag>
        <tag>deep copy</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7.3上安装docker</title>
    <url>/2019/04/20/CentOS7.3%E4%B8%8A%E5%AE%89%E8%A3%85docker/</url>
    <content><![CDATA[<a id="more"></a>
<h4 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h4><p>一直想着在腾讯云上的docker中安装MySQL,用于自己平时的研究学习，下面就是记录自己用普通账户安装MySQL的过程，由于没有建docker权限的组，所有命令最前面都要加sudo</p>
<h4 id="查找Docker-Hub上的MySQL镜像"><a href="#查找Docker-Hub上的MySQL镜像" class="headerlink" title="查找Docker Hub上的MySQL镜像"></a>查找Docker Hub上的MySQL镜像</h4><figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">sudo docker search mysql</span><br></pre></td></tr></table></figure>
<h4 id="拉取官方镜像"><a href="#拉取官方镜像" class="headerlink" title="拉取官方镜像"></a>拉取官方镜像</h4><figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">sudo docker pull mysql:5.7</span><br></pre></td></tr></table></figure>
<p>等下载完后，就可以在本地镜像列表里查到REPOSITORY为mysql，标签为5.7的镜像：</p>
<figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">sudo docker images | grep mysql</span><br></pre></td></tr></table></figure>
<h4 id="运行MySQL容器"><a href="#运行MySQL容器" class="headerlink" title="运行MySQL容器"></a>运行MySQL容器</h4><p>用下面的命令，可以根据Docker上的MySQL镜像实例化MySQL容器</p>
<figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">sudo docker run --name mysql-test -p 3306:3306 -v /mnt/king/mysql_custom:/etc/mysql/conf.d -v /mnt/king/mysql_5:/var/lib/mysql -v /etc/localtime:/etc/localtime -e MYSQL_ROOT_PASSWORD=mysqltest -d mysql:5.7</span><br></pre></td></tr></table></figure>
<p>命令说明：</p>
<ul>
<li>–name mysql-test: 设置容器的名称为mysql-test,<strong>注意</strong>：容器名称是唯一的；</li>
<li>-p 3306:3306: 注意里面的p是小写的，不能写成大写的，大写的意思不一样，这里将宿主机的3306端口映射到容器的3306端口，在这种情况下，会将宿主机的所有IP绑定到容器；</li>
<li>-v /mnt/king/mysql_custom:/etc/mysql/conf.d:默认情况下，MYSQL的启动配置文件是/etc/mysql/my.cnf，而/etc/mysql/conf.d目录下的存在任何.cnf格式文件时，都会使用该文件中配置项替换默认配置，因此，为了使用自定义配置，在宿主机的/mnt/king/mysql_custom目录下创建了一个配置文件，然后在创建容器时通过-v参数，以数据卷的方式将自定义配置挂载到mysql容器的/etc/mysql/conf.d目录下</li>
<li>-v /mnt/king/mysql_5:/var/lib/mysql: 首先宿主机上有/mnt/king/mysql_5目录，该命令是数据卷的挂载，表示将宿主机的/mnt/king/mysql_5目录挂载到容器内的/var/lib/mysql目录。这个目录是MySQL的默认数据目录，当使用自定义配置时，应该也做相应的修改；</li>
<li>-v /etc/localtime:/etc/localtime: 设定容器的时间与宿主机保持一致；</li>
<li>-e MYSQL_ROOT_PASSWORD=mysqltest: 设置容器的环境变量，用于设置MySQL root用户的密码，相当于在容器中 export MYSQL_ROOT_PASSWORD=mysqltest的作用；</li>
<li>-d: 告诉容器在后台运行；</li>
<li>mysql:5.7: 告诉容器运行的镜像名为mysql，标签为5.7;<h4 id="进入MySQL容器"><a href="#进入MySQL容器" class="headerlink" title="进入MySQL容器"></a>进入MySQL容器</h4><figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">sudo docker container <span class="built_in">exec</span> -it mysql-test bash</span><br></pre></td></tr></table></figure>
<h4 id="在容器内登录MySQL"><a href="#在容器内登录MySQL" class="headerlink" title="在容器内登录MySQL"></a>在容器内登录MySQL</h4><figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">mysql -u root -p mypass(不推荐这样使用，因为有安全问题)</span><br><span class="line">或者mysql -u root -p然后按照提示输入密码</span><br></pre></td></tr></table></figure>
在这里我不想用root对外，所以自己创建了一个用于开发使用的用户：<figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">CREATE USER <span class="string">'test'</span>@<span class="string">'%'</span> IDENTIFIED BY <span class="string">'test'</span>;</span><br></pre></td></tr></table></figure>
授权<figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">GRANT all PRIVILEGES on *.* to <span class="string">'test'</span>@<span class="string">'%'</span> WITH GRANT OPTION;</span><br><span class="line"></span><br><span class="line">GRANT all PRIVILEGES on *.* to root@<span class="string">'%'</span> WITH GRANT OPTION;</span><br><span class="line"></span><br><span class="line">ALTER USER <span class="string">'root'</span>@<span class="string">'%'</span> IDENTIFIED WITH mysql_native_password BY <span class="string">'mysqltest'</span>;</span><br><span class="line"></span><br><span class="line">ALTER USER <span class="string">'test'</span>@<span class="string">'%'</span> IDENTIFIED WITH mysql_native_password BY <span class="string">'test'</span>;</span><br><span class="line"></span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>
最后到腾讯云上的控制台的安全策略中开启3306这个端口，就可以用navicat连接MySQL了。</li>
</ul>
<h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><ul>
<li><a href="https://dev.mysql.com/doc/mysql-installation-excerpt/5.5/en/docker-mysql-getting-started.html" target="_blank" rel="noopener">MySQL官网Docker上安装MySQL指南</a></li>
<li><a href="https://blog.csdn.net/zhangxiaoyang0/article/details/85414633" target="_blank" rel="noopener">docker安装mysql使用navicat远程登录（阿里云）</a></li>
<li><a href="https://www.jianshu.com/p/e7ac0717be00" target="_blank" rel="noopener">Docker部署mysql，并配置远程连接</a></li>
<li><a href="https://itbilu.com/linux/docker/EyP7QP86M.html" target="_blank" rel="noopener">MySQL官方Docker镜像的使用</a></li>
<li><a href="https://www.jianshu.com/p/d7b9c468f20d" target="_blank" rel="noopener">MySQL创建用户与授权</a></li>
<li><a href="https://blog.csdn.net/weixin_42242494/article/details/80630267" target="_blank" rel="noopener">docker安装MySQL远程连接(阿里云服务器)</a></li>
<li><a href="https://itbilu.com/linux/docker/Ey5dT-i2G.html" target="_blank" rel="noopener">Docker网络-端口映射、容器链接、Networking</a></li>
</ul>
]]></content>
      <tags>
        <tag>docker</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
</search>
